{"version":3,"sources":["LIst.js","Cart.js","App.js","reportWebVitals.js","index.js"],"names":["LIst","props","console","log","compeleted","className","style","textDecoration","text","onClick","cutIt","id","onselect","Cart","useState","Items","setItems","input","setinput","value","setValue","deleteitem","oldItems","filter","arrelem","dummy","map","v","type","user","onChange","e","target","name","olditem","newRecord","Date","getTime","toast","error","position","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.44fd7ff4.chunk.js","sourcesContent":["import React from 'react'\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\r\n\r\nconst LIst = (props) => {\r\n    console.log(\"compeleted\",props.compeleted);\r\n    return (\r\n    <div className=\"container\">   \r\n    <div className=\"row\"> \r\n    <div className=\"col-md-8 mx-auto d-flex justify-content-between mt-3\"> \r\n        <h3 className=\"text-light\" style={{textDecoration : props.compeleted ? \"line-through\" : null}}>{props.text}</h3> \r\n        <div>\r\n        <button className=\"btn btn-warning\" onClick={() => props.cutIt(props.id)}>✔</button>\r\n        <button className=\"btn btn-danger\" onClick={() => props.onselect(props.id)}>✖</button></div>\r\n    </div>\r\n    </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default LIst;\r\n","import React, { useState } from 'react'\r\nimport LIst from './LIst';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n  import 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst Cart = () => {\r\n    const [Items, setItems] = useState({});\r\n    const [input, setinput] = useState([]);\r\n    const [value, setValue] = useState(\"all\");\r\n    console.log(input);\r\n    const inputdata = (e) => {\r\n        const {name,value} = e.target\r\n        // const value = e.target.value;\r\n        console.log(name, value);\r\n        setItems({ ...Items, [name]: value });\r\n    }\r\n    const inputEvent = () => {\r\n        if (!Items.user) {\r\n            toast.error(\"Please Add Items... \")\r\n        } else {\r\n            setinput((olditem) => {\r\n                const newRecord = { ...Items, id: new Date().getTime(), compeleted: false }\r\n                return ([...olditem, newRecord]);\r\n            })\r\n            setItems({\r\n                user: \"\",\r\n            })\r\n        }\r\n    }\r\n    const deleteitem = (id) => {\r\n        setinput((oldItems) => {\r\n            return oldItems.filter((arrelem) => {\r\n                return arrelem.id !== id;\r\n            });\r\n        })\r\n    }\r\n    const cutIt = (id) => {\r\n        console.log(\"setItems\", id);\r\n\r\n        let dummy = input\r\n        // console.log(\"dummy\", dummy);\r\n        dummy = input.map(v => {\r\n            if (v.id === id) {\r\n                return { ...v, compeleted: !v.compeleted }\r\n            } else {\r\n                return v\r\n            }\r\n        })\r\n        setinput(dummy)\r\n        // setItems = ({compeleted:true});\r\n        // console.log(setItems);    \r\n    }\r\n    console.log(value);\r\n    return (\r\n        <>\r\n        <div className=\"contact\">\r\n        <div className=\"container\">\r\n        <div className=\"row\">\r\n        <div className=\"col-lg-8 mx-auto mt-5\">\r\n        <div className=\"row\">\r\n        <div className=\"col-lg-6 d-flex\">\r\n            <input className=\"form-control\" type=\"text\" value={Items.user} onChange={inputdata} name=\"user\" />\r\n            <button className=\"btn bg-white me-1\" onClick={inputEvent}>➕</button>\r\n            <ToastContainer position=\"top-center\"/>\r\n        </div>\r\n        <div className=\"col-lg-6\">\r\n            <select className=\"form-select\" name='select' onChange={(e) => setValue(e.target.value)}>\r\n                <option value=\"all\" name=\"all\" >All</option>\r\n                <option value=\"comeleted\" name=\"comeleted\">Compeleted</option>\r\n                <option value=\"Uncompelet\" name=\"Uncompelet\">Uncompelet</option>\r\n            </select>\r\n            </div>\r\n        </div>\r\n            </div>\r\n            </div>\r\n            </div>\r\n                {value === \"all\" && input.map(v => {\r\n                    const { id, user, compeleted } = v;\r\n                    return (\r\n                                <LIst                                                \r\n                                        cutIt={cutIt}\r\n                                        compeleted={compeleted}\r\n                                        text={user}\r\n                                        key={id}\r\n                                        id={id}\r\n                                        onselect={deleteitem}\r\n                                            />\r\n                                        )\r\n                })}\r\n                {value === \"comeleted\" && input.map(v => {\r\n                    const { id, user, compeleted } = v;\r\n                    if(v.compeleted === true){\r\n                        return (\r\n                                <LIst                        \r\n                                        cutIt={cutIt}\r\n                                        compeleted={compeleted}\r\n                                        text={user}\r\n                                        key={id}\r\n                                        id={id}\r\n                                        onselect={deleteitem}\r\n                                    />\r\n                                )\r\n                    }\r\n                })}\r\n\r\n                {value === \"Uncompelet\" && input.map(v => {\r\n                    const { id, user, compeleted } = v;\r\n                    if(v.compeleted === false){\r\n                        return (\r\n                                <LIst                                              \r\n                                        cutIt={cutIt}\r\n                                        compeleted={compeleted}\r\n                                        text={user}\r\n                                        key={id}\r\n                                        id={id}\r\n                                        onselect={deleteitem}\r\n                                            />\r\n                                        )\r\n                    }\r\n                })}\r\n                </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Cart;\r\n\r\n","import './App.css';\nimport Cart from './Cart';\n\nfunction App() {\n  return <Cart />\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}